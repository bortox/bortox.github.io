<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Image on bortox.it ðŸ¦… the cuckoo's nest</title><link>https://bortox.it/en/tags/image/</link><description>Recent content in Image on bortox.it ðŸ¦… the cuckoo's nest</description><generator>Hugo</generator><language>en</language><copyright>Content license: [ :link: CC BY-NC-ND 4.0](https://creativecommons.org/licenses/by-nc-nd/4.0)</copyright><lastBuildDate>Thu, 18 Aug 2022 11:24:00 +0000</lastBuildDate><atom:link href="https://bortox.it/en/tags/image/index.xml" rel="self" type="application/rss+xml"/><item><title>Convert jekyll blog images to avif and webp with jekyll picture tag</title><link>https://bortox.it/en/article/jekyll-blog-webp-avif-images/</link><pubDate>Wed, 20 Jul 2022 00:24:00 +0000</pubDate><guid>https://bortox.it/en/article/jekyll-blog-webp-avif-images/</guid><description>I have a blog with over 100 articles, mainly Compiti Scolastici (:it: School assignments), where I also convert images to the recent .avif and .webp formats.
Why convert images to modern formats? #Why did I do it? Mainly for three reasons:
The score of some pages with many images on PageSpeed was sometimes less than 90/100 and it mildly infuriated me, because the website average is 98/99 out of 100. After enabling webp conversion on my Hugo blog I noticed a better loading speed and savings on bandwidth and image size.</description></item><item><title>Optimize png images with pngquant</title><link>https://bortox.it/en/article/optimize-png-pngquant/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://bortox.it/en/article/optimize-png-pngquant/</guid><description>Surfing on F-droid - an open-source app store - I discovered the Atomize app. This app aims to reduce the size of an image in png format, often by up to 70%.
In my case, using a few screenshots or manga scans, the reduction often reaches 50% with negligible (unnoticeable) losses in image quality.
I was amazed, so I opened the About app screen where I discovered that the app is simply a front-end of the open-source binary pngquant.</description></item></channel></rss>